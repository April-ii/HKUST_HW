{
    "policy_class": {
        ":type:": "<class 'abc.ABCMeta'>",
        ":serialized:": "gAWVSAAAAAAAAACMJXNiM19jb250cmliLmNvbW1vbi5yZWN1cnJlbnQucG9saWNpZXOUjBpSZWN1cnJlbnRBY3RvckNyaXRpY1BvbGljeZSTlC4=",
        "__module__": "sb3_contrib.common.recurrent.policies",
        "__doc__": "\n    Recurrent policy class for actor-critic algorithms (has both policy and value prediction).\n    To be used with A2C, PPO and the likes.\n    It assumes that both the actor and the critic LSTM\n    have the same architecture.\n\n    :param observation_space: Observation space\n    :param action_space: Action space\n    :param lr_schedule: Learning rate schedule (could be constant)\n    :param net_arch: The specification of the policy and value networks.\n    :param activation_fn: Activation function\n    :param ortho_init: Whether to use or not orthogonal initialization\n    :param use_sde: Whether to use State Dependent Exploration or not\n    :param log_std_init: Initial value for the log standard deviation\n    :param full_std: Whether to use (n_features x n_actions) parameters\n        for the std instead of only (n_features,) when using gSDE\n    :param use_expln: Use ``expln()`` function instead of ``exp()`` to ensure\n        a positive standard deviation (cf paper). It allows to keep variance\n        above zero and prevent it from growing too fast. In practice, ``exp()`` is usually enough.\n    :param squash_output: Whether to squash the output using a tanh function,\n        this allows to ensure boundaries when using gSDE.\n    :param features_extractor_class: Features extractor to use.\n    :param features_extractor_kwargs: Keyword arguments\n        to pass to the features extractor.\n    :param share_features_extractor: If True, the features extractor is shared between the policy and value networks.\n    :param normalize_images: Whether to normalize images or not,\n         dividing by 255.0 (True by default)\n    :param optimizer_class: The optimizer to use,\n        ``th.optim.Adam`` by default\n    :param optimizer_kwargs: Additional keyword arguments,\n        excluding the learning rate, to pass to the optimizer\n    :param lstm_hidden_size: Number of hidden units for each LSTM layer.\n    :param n_lstm_layers: Number of LSTM layers.\n    :param shared_lstm: Whether the LSTM is shared between the actor and the critic\n        (in that case, only the actor gradient is used)\n        By default, the actor and the critic have two separate LSTM.\n    :param enable_critic_lstm: Use a seperate LSTM for the critic.\n    :param lstm_kwargs: Additional keyword arguments to pass the the LSTM\n        constructor.\n    ",
        "__init__": "<function RecurrentActorCriticPolicy.__init__ at 0x000002471AE42200>",
        "_build_mlp_extractor": "<function RecurrentActorCriticPolicy._build_mlp_extractor at 0x000002471AE423B0>",
        "_process_sequence": "<staticmethod(<function RecurrentActorCriticPolicy._process_sequence at 0x000002471AE42290>)>",
        "forward": "<function RecurrentActorCriticPolicy.forward at 0x000002471AE43010>",
        "get_distribution": "<function RecurrentActorCriticPolicy.get_distribution at 0x000002471AE430A0>",
        "predict_values": "<function RecurrentActorCriticPolicy.predict_values at 0x000002471AE43130>",
        "evaluate_actions": "<function RecurrentActorCriticPolicy.evaluate_actions at 0x000002471AE431C0>",
        "_predict": "<function RecurrentActorCriticPolicy._predict at 0x000002471AE43250>",
        "predict": "<function RecurrentActorCriticPolicy.predict at 0x000002471AE432E0>",
        "__abstractmethods__": "frozenset()",
        "_abc_impl": "<_abc._abc_data object at 0x000002471AE3EFC0>"
    },
    "verbose": 1,
    "policy_kwargs": {
        ":type:": "<class 'dict'>",
        ":serialized:": "gAWVTwAAAAAAAAB9lCiMCG5ldF9hcmNolF2UKEtAS0BljA1hY3RpdmF0aW9uX2ZulIwbdG9yY2gubm4ubW9kdWxlcy5hY3RpdmF0aW9ulIwEUmVMVZSTlHUu",
        "net_arch": [
            64,
            64
        ],
        "activation_fn": "<class 'torch.nn.modules.activation.ReLU'>"
    },
    "num_timesteps": 16896,
    "_total_timesteps": 16730,
    "_num_timesteps_at_start": 0,
    "seed": null,
    "action_noise": null,
    "start_time": 1701884078903423900,
    "learning_rate": 0.0001477384673030073,
    "tensorboard_log": "./tensorboard/",
    "_last_obs": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWVLwIAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJa4AQAAAAAAAN064jrnOu064jrXOtg61jraOto61ToADYABAwB2BXkAEgMDAyIATQCLAgcAXQFbCMYoRgLaEiUIsQDoEZMQWgB+HgA8ADwAPAA8ADwAPAA8ADwAPAA8ADw8ATQANAA0ADQAEQA6ADoAOgA6AAkElwWXBZcFlwWXBfoC+gL6AvoC+gKXBQAAAAAAAAAAAADIHAAAAAAAAAAAAADfKkYs5ytrLBYsjis9K7AqOyuuKrEpDjTAK+U3ajm4NAAASycAAGEy5TIAAOE1ZjUrN803vTbjNQA2yjVuNns2/DU1Nzs3SDdPN0o3PzdCN0g3STdMN0U3ADwAAAA4ADgAOAA4ADgAAAAAADgAOJEzeDNgMwQzEDNpM68zATQONBk0RDRHOEc4RzhHOEc4RzhHOEc4RzhHOEc4+zr3OvM68DrtOuw66TrmOuM64TrdOgA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAjRYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZBIAAAAABAwAAAAAAAApCQAAlIwFbnVtcHmUjAVkdHlwZZSTlIwCZjKUiYiHlFKUKEsDjAE8lE5OTkr/////Sv////9LAHSUYksBSxRLC4eUjAFDlHSUUpQu"
    },
    "_last_episode_starts": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWVdAAAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJYBAAAAAAAAAACUjAVudW1weZSMBWR0eXBllJOUjAJiMZSJiIeUUpQoSwOMAXyUTk5OSv////9K/////0sAdJRiSwGFlIwBQ5R0lFKULg=="
    },
    "_last_original_obs": null,
    "_episode_num": 0,
    "use_sde": false,
    "sde_sample_freq": -1,
    "_current_progress_remaining": -0.00992229527794386,
    "_stats_window_size": 100,
    "ep_info_buffer": {
        ":type:": "<class 'collections.deque'>",
        ":serialized:": "gAWVIAAAAAAAAACMC2NvbGxlY3Rpb25zlIwFZGVxdWWUk5QpS2SGlFKULg=="
    },
    "ep_success_buffer": {
        ":type:": "<class 'collections.deque'>",
        ":serialized:": "gAWVIAAAAAAAAACMC2NvbGxlY3Rpb25zlIwFZGVxdWWUk5QpS2SGlFKULg=="
    },
    "_n_updates": 330,
    "observation_space": {
        ":type:": "<class 'gymnasium.spaces.box.Box'>",
        ":serialized:": "gAWVsAYAAAAAAACMFGd5bW5hc2l1bS5zcGFjZXMuYm94lIwDQm94lJOUKYGUfZQojAVkdHlwZZSMBW51bXB5lIwFZHR5cGWUk5SMAmYylImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKMDWJvdW5kZWRfYmVsb3eUjBJudW1weS5jb3JlLm51bWVyaWOUjAtfZnJvbWJ1ZmZlcpSTlCiW3AAAAAAAAAABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBlGgIjAJiMZSJiIeUUpQoSwOMAXyUTk5OSv////9K/////0sAdJRiSxRLC4aUjAFDlHSUUpSMDWJvdW5kZWRfYWJvdmWUaBEoltwAAAAAAAAAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAZRoFUsUSwuGlGgZdJRSlIwGX3NoYXBllEsUSwuGlIwDbG93lGgRKJalGgLSxRLC4aUaBl0lFKUjARoaWdolGgRKJa4AQAAAAAAAAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8ADwAPAA8lGgLSxRLC4aUaBl0lFKUjAhsb3dfcmVwcpSMAzAuMJSMCWhpZ2hfcmVwcpSMAzEuMJSMCl9ucF9yYW5kb22UTnViLg==",
        "dtype": "float16",
        "bounded_below": "[[ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]]",
        "bounded_above": "[[ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True  True]]",
        "_shape": [
            20,
            11
        ],
        "low": "[[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]]",
        "high": "[[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]]",
        "low_repr": "0.0",
        "high_repr": "1.0",
        "_np_random": null
    },
    "action_space": {
        ":type:": "<class 'gymnasium.spaces.multi_discrete.MultiDiscrete'>",
        ":serialized:": "gAWVHAEAAAAAAACMH2d5bW5hc2l1bS5zcGFjZXMubXVsdGlfZGlzY3JldGWUjA1NdWx0aURpc2NyZXRllJOUKYGUfZQojARudmVjlIwSbnVtcHkuY29yZS5udW1lcmljlIwLX2Zyb21idWZmZXKUk5QolhAAAAAAAAAAAwAAAAAAAAAKAAAAAAAAAJSMBW51bXB5lIwFZHR5cGWUk5SMAmk4lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGJLAoWUjAFDlHSUUpSMBXN0YXJ0lGgIKJYQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUaA9LAoWUaBN0lFKUjAZfc2hhcGWUSwKFlIwFZHR5cGWUaA+MCl9ucF9yYW5kb22UTnViLg==",
        "nvec": "[ 3 10]",
        "start": "[0 0]",
        "_shape": [
            2
        ],
        "dtype": "int64",
        "_np_random": null
    },
    "n_envs": 1,
    "n_steps": 512,
    "gamma": 0.9935367039145072,
    "gae_lambda": 0.8115526326935627,
    "ent_coef": 0.0,
    "vf_coef": 0.5,
    "max_grad_norm": 0.5,
    "rollout_buffer_class": null,
    "rollout_buffer_kwargs": {},
    "batch_size": 256,
    "n_epochs": 10,
    "clip_range": {
        ":type:": "<class 'function'>",
        ":serialized:": "gAWVegIAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwNX2J1aWx0aW5fdHlwZZSTlIwKTGFtYmRhVHlwZZSFlFKUKGgCjAhDb2RlVHlwZZSFlFKUKEsBSwBLAEsBSwFLE0MEiABTAJROhZQpjAFflIWUjEpDOlxVc2Vyc1xMWkhcYW5hY29uZGEzXGxpYlxzaXRlLXBhY2thZ2VzXHN0YWJsZV9iYXNlbGluZXMzXGNvbW1vblx1dGlscy5weZSMBGZ1bmOUS4NDAgQBlIwDdmFslIWUKXSUUpR9lCiMC19fcGFja2FnZV9flIwYc3RhYmxlX2Jhc2VsaW5lczMuY29tbW9ulIwIX19uYW1lX1+UjB5zdGFibGVfYmFzZWxpbmVzMy5jb21tb24udXRpbHOUjAhfX2ZpbGVfX5RoDXVOTmgAjBBfbWFrZV9lbXB0eV9jZWxslJOUKVKUhZR0lFKUjBxjbG91ZHBpY2tsZS5jbG91ZHBpY2tsZV9mYXN0lIwSX2Z1bmN0aW9uX3NldHN0YXRllJOUaB99lH2UKGgXaA6MDF9fcXVhbG5hbWVfX5SMGWNvbnN0YW50X2ZuLjxsb2NhbHM+LmZ1bmOUjA9fX2Fubm90YXRpb25zX1+UfZSMDl9fa3dkZWZhdWx0c19flE6MDF9fZGVmYXVsdHNfX5ROjApfX21vZHVsZV9flGgYjAdfX2RvY19flE6MC19fY2xvc3VyZV9flGgAjApfbWFrZV9jZWxslJOURz/Bc7PmCsxbhZRSlIWUjBdfY2xvdWRwaWNrbGVfc3VibW9kdWxlc5RdlIwLX19nbG9iYWxzX1+UfZR1hpSGUjAu"
    },
    "clip_range_vf": null,
    "normalize_advantage": true,
    "target_kl": null,
    "_last_lstm_states": {
        ":type:": "<class 'sb3_contrib.common.recurrent.type_aliases.RNNStates'>",
        ":serialized:": "gAWVUhUAAAAAAACMKXNiM19jb250cmliLmNvbW1vbi5yZWN1cnJlbnQudHlwZV9hbGlhc2VzlIwJUk5OU3RhdGVzlJOUjAx0b3JjaC5fdXRpbHOUjBJfcmVidWlsZF90ZW5zb3JfdjKUk5QojA10b3JjaC5zdG9yYWdllIwQX2xvYWRfZnJvbV9ieXRlc5STlEL9BAAAgAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3JhZ2UKcQFYDQAAADI1MDY0NTUwMjAzMDRxAlgGAAAAY3VkYTowcQNNAAFOdHEEUS6AAl1xAFgNAAAAMjUwNjQ1NTAyMDMwNHEBYS4AAQAAAAAAANjiYT6yCrk9Rl+UPQ1Bhj040So+ESRFPSgqWb2/Di0+MVQmO0tbHb3n+4Y93Sp1PFJK/DsVQC+9tp+1vTf1B75b9ra8AdSNvcBR6D7waAm9vAGFPX0z/z1D2xw9m/EsPZpvrLvW8TK+Zd+vPWV05z0SR7s9pYSpvGo3Ab54nmo+TcQCPkjsuT1uthC+0oSIvNP4ir3B1j+8+17VvGy+OrzbAby9rEprPpsIA77ErZK9Lh9qPWkF8DwDNU28Qmw9vhsRhb3DVD0+5e43PnCMZD2jMA28NUROvSTJVD2YgDo+cnr2vR56sT3mizO+lKJqvZzxkr1Cq+s8MtSSPsDdXD1cdpI7EXB6vS/V670gbtu9rQkNPtSIhr6Y/7C9DrgBPgiODL5JBSM8fENYvX2D1D35/h++/7MWO9vSgb1xyVM+7fztvOW5Ar3aBBi+WdxIvXkqxr2UCUK+etVbPRzkBzwrfti8aKa+PCy52zwm/u88ZpF/PQ5TrD2zwgO+PV5HvSwsNj72QxC+hjWNPWNxrL2EAgg+nAwSvuOUFzwRav89Qlr3vREqxb1ceVa99h6rvLH0ET16DOi7djjaPbEE4L0+qpK9muPkO5NBiz1Sbh+9Oz8ivqLCHb4Qzfc9GSjqvf08HD7+spw98wfcPDXCCL7bb7y9/MtkPY+XALyT9WU+9xUBvkc36D37rwy+CR2+OwAtlDxA9eq9yhfrPJjAvj2a5CI9Z76nPV4mtL33laM8rTxWPaZ5xr3Vbh692amLvd/TKT5O5Lo6ndk9PQswLD4u+c0+HX+zPflWzb3tEFi+p66bPQmIvL00AVW+6v3+PUh+Tz5QQEi9XtxbPhrbhjxATAa+4v8ovtj+Zj4dceG8uPkFvReyV7wIkQ6++OpHvuOnYL5x5IC9023ivID7Hr7uEbW9rHdrPQczpjxQpza8ca71PHHI9L0dHKQ9LF/FvTZJ2r1VB4K9qlwHPXtKtL1AUX89HSbfPfqWKz5ktmC+nckbvjhUsL0XdIO9DU3aPJ7O071HIag7n4i0PfhWsjybYPe9rfSFOGtmBr6zylW9rE0gvoGemz3p/1e9M6whPZOb071TBVc9+1uKPU/nDj0MIZq7/VaivTD/gj0QFt+9DcykPVtG2bzGhPq77uo3vtsrLL44tOI9hzcaPnzh97za0IO6qaAQPkXeKb2WCKo9dju4vcHqAD5kYL09RwiHvLbyDbpVmKK9OyDSPXQAYz0cVtA8+Q3cvUUEsL2Jg9K90qrTvR4OwD077oI9JBiqvNdLhjz1LtG8n2FSPdesoDxc2B09MIn0PWLdRT0SAAG+CKtXvUyDozmu6wO+qeinPgGUhT1/dmk7HpxRvc4UJz6UhZRSlEsASwFLAU0AAYeUTQABTQABSwGHlImMC2NvbGxlY3Rpb25zlIwLT3JkZXJlZERpY3SUk5QpUpR0lFKUaAUoaAhC/QQAAIACigps/JxG+SBqqFAZLoACTekDLoACfXEAKFgQAAAAcHJvdG9jb2xfdmVyc2lvbnEBTekDWA0AAABsaXR0bGVfZW5kaWFucQKIWAoAAAB0eXBlX3NpemVzcQN9cQQoWAUAAABzaG9ydHEFSwJYAwAAAGludHEGSwRYBAAAAGxvbmdxB0sEdXUugAIoWAcAAABzdG9yYWdlcQBjdG9yY2gKRmxvYXRTdG9yYWdlCnEBWA0AAAAyNTA2NDU1MDIzMjE2cQJYBgAAAGN1ZGE6MHEDTQABTnRxBFEugAJdcQBYDQAAADI1MDY0NTUwMjMyMTZxAWEuAAEAAAAAAADivgI/BJgwPnHFKT6QEQs+pkLWPg0MpD1PBMu99+XNPiWavDvPIoy9iuwdPj2yAD1XHbY8jwnAvUZJJr4CpIK+bA5LvcOEOL7NhFU/Hri6vYk1GD49bXA+/CqaPftOtz3KpDu8xaSyvlXYJD7BtDQ+PY0wPj2uN701n5i+qOrrPmQKfT5GcTo+bkaYvp3i+LxwXOO9reWxvI/Oe71EJtC8HrZNvmPVAT9ia4q+qVb7vYhZ0z22fDM9SWu1vBnm274MfwK+Fp3JPlv+3D7KGgY+FWOjvAQew71Ta6U9PX3OPstMg77wujs+yOTDvgL+5L390gK+k9loPZh9Hz9dSvA9C/MkPN/i2L1YXWe+lgxBvkcimD7P3xq/0NM3vlZtfj54cJ2+1UWQPPHz2L081zU++9+HvtazgDtmrhW+2rW+Poveh711fIi9CNS3vpW8yL3J0ke+Uc7cvoA6zT2pgFM80X47vURGbD39mVQ9e2RrPU3RDT7etkE+YpiUvu4Fwb2ppJY+uBKuvoac9z2nKAe+SKOcPk/cjr4rrnM8pwdWPrgddL7nckK+V98EvnovGL2qaI49Hi5bvFF3Uz7i4Dm+9L8YvuiWQjx8AwY+4erPvSuDkb7yOb2+966SPkjOe77ukLc+ejsNPkifVD1DNpG+UfRfvmOzBj6Wy268ORsDP4Zzbr5evYg+es2Svvy8MTxGYOw8rnCIvm25jj0Y6D0+m1isPdNREj48F0S+YHUmPbOu8D2SzVu+3XqjvQrkOL7RkZo+9FJJO0FVwz3cP5s+t0t3P0uYRT51FGS+eCatvvLcKj6TvVm+rhUQv7Hxoj7uodM+4DbvvWZKvj6w8QI9YV2lvp1rur4a+RE/U7tsvcmrTr2rxLa8PWSGvo0dxL7bJdS+CbYVvp8GaL1PPsa+WyZ2voot+j3VEko9QITdvAvIkT0eOHG+pUgTPqVkVL4PfVu+IG8svoZJkj1TImK+W98JPlKhUj7oVMA+8QT3vqdBnr6LSFq+whX4vbPhST2O+1y+EzcUPAhPLz6vsk492xFwvq3/CjkqaYm+Lkvsve9JwL7Cwx4+dX6+vUCzvD1XbWe+XoHtPccH6T3jPsc9GSUbvBn5Bb41ne49dCaSvvxLGj6r+Wa9pXmAvIQg7L57lJ++oW9nPmG+vT7RzoO9ODQGu0czsj72Vvi9HNhDPsIQQL4vfYA+9TU+PrCtB73w2IC6IsskvvSZjT70Ydk9kiFLPcCUdL65DEC+Fe+Avju0Or7jVBw+WRkQPgzuIr0VAxg927tLvUBsAD6QIwI9pViwPTldgj4Vxbk98Z6Fvno39b2FUBU6F0V1vvcjGz/juz8+4dknPPtHs71C6fI+lIWUUpRLAEsBSwFNAAGHlE0AAU0AAUsBh5SJaBApUpR0lFKUhpRoBShoCEL9BAAAgAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3JhZ2UKcQFYDQAAADI1MDY0NTUwMTg3MzZxAlgGAAAAY3VkYTowcQNNAAFOdHEEUS6AAl1xAFgNAAAAMjUwNjQ1NTAxODczNnEBYS4AAQAAAAAAACfefL8wfH2/UF58P9M5fr+tzX0/MTF/v6FPd74ooHy/p3V5P40ifr/CWHu/EVl9v5CL1j7CDlc//2F5v0lPv75SAHy/UgV7P7Tufb+lRdi986V8Pz3faz7Jo3y/aPt+P08qfr9es30/bjJ8P74pe7/xr3y/pbR+P/xYfr8lIn0/8et8v9a2yD6Gz36/sQ19v85+fb8+UHk/gZh+P45Vdz+zkHy/RvZ8v0E3fj8vjHm/bNJ6P0o06D76T3g/DO97P/V8fr8sGny/gGl/v9+8fb/zo3q/avJwvneBfL++vX4/UNkJvp16fr+ZE38/Jr1tP0lre7+BD5m898Z8v4bOfj+PYX4/wDN+v30cfL+ECn6/Y+t9P4SYfj/ern6//Nt3v+O4e78LQ30/W799PxE/fr87DsA+lvt8v9O0fT8Qln4/QlB5v4Tbbj+YEH8/ict9v9YJfr8Yn2W+KUx+v6sodj8Vj36/q5otv0uL+D50Yno/8qB7v4NZfT/bwJy7Pwp+v3kOeT90InK/wCd8v2bidT9pwXw/hhl+v1uwdj/Zt3y/2jV+v8XocD9r5nw/dx9rP2AHf7+QXH4/Tgt8P7RFfj/krH0/eLh6v3SPer/jGXo/vrp+P6ecjT5IsXy/75PfPTF6fT+vj34/Pq/HPt1Gb79PLn2/eWZ5v+OXXL++K34/DnspPq4ffT/WWHw/Mr9+P69Ifr//VX8/I4B9vw4xfz8ysFo/p9l+v3kafr/aOH4/0x19v9f8fL9H830/udN9v7OdfT9Ik3y/RkR9P4bjer8cC3+/QBOkPNiLfj+Qy3o/gUN+PzGUfL/NCFi/fr1+P/UAfT/JDH6/EaxVP4ecfT8nkn2/ly53v2H0ej8ng3u/J+V9v260fj+O3Xy/PFF+P5PHfb/TCX6/7HJ+v2H0fb+FuX6/fNF7P/CcfD/jZH4/KIl7P9I8fr8kP3s/Egp8vxo1fj+kVH6/N6h9v14NDDzAgn0/ocB3v0rpfT/wA38/MQ59P7MFfT99x3y/xd59v3tROr9p3le/aGh+P3DLfb9i0MU9pI16P13bez/RcH2/Zo97vzaSfj/ktny/cPV9v7TmfL8oWX0/FIp+P14bpLx1Qn6/a2d7v+WXej8Dwn0/dTl+v5Xlfr+UfZE9suhiP49EfT+B4ns/VIh+vypQfz9g5Hw/SUx+P35BYb/k3eq+KXd6P1olfT8Bg32/4Zp8P+j0ej9VRX0//XV7v5Vvfj//kXs/8FJwP19vY7835Hm/ij58v2MZfb8Kf30/Kw6VvlVdfD8qdnU/8V3ZPLUKPT8YV30/exx/P02geT+ksH6/2Ax4P/SZfD/npXS/Po59P7HCdT8A/H0/6PB5P2k/TD+UhZRSlEsASwFLAU0AAYeUTQABTQABSwGHlIloEClSlHSUUpRoBShoCEL9BAAAgAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3JhZ2UKcQFYDQAAADI1MDY0NTUwMjI3NjhxAlgGAAAAY3VkYTowcQNNAAFOdHEEUS6AAl1xAFgNAAAAMjUwNjQ1NTAyMjc2OHEBYS4AAQAAAAAAACkWtsBPZ6bAZ56KQN8d2MDHP15A8FzUwBbsfr5afLXA5KgZQL30gsBvQL3A0jHhwEod6D4gOJ0/7VzqwJxHyr49IIPApwpRQIyKq8DsV9y9+DeoQOo2cT5xkJ7AGTmoQIhvb8B5qK9AHkqTQOlZpcARKpHA+4POQEf5o8BAT8hAPlXBwHIZ1T61q4rAkt5NwEn4ycCD1xBAOROrQCU4xkC0/5HAmpOLwAVPlUBFg53AKcbuQE5i+z5YN5VA8x/vQJOXm8ADtKfABJihwCfCxMC9kZ7AYId2vivgtcCJifJAV+ALvvtZkMA/2H9AJt/YP7wolcDRFpu8j4rIwFYo2kDiCcpAO5KVwEwQesA+0KjAmPu6QD5fi0CUBgTBQLybwN130sCDmKBAt16SQNXrjsCEtcw+UiS0wK2JWkAbxcJAYejRwEYJiUB+MIZAKMxmwNFsocDplmq+rX+owMALC0Cn0IbAD89XvxB/DT+kMNxA2Je1wE+UE0GqF1C8GxDgwClsFkAdAcrA5bLawFeZEEHW8JxAobjCwLbmjkD8x7PAdIWYwGXEEkBaSohAON5/QLJ6hcB+kJJAJVOuQMch5kCbEWxAgwKPwDlJvcBjLxdAPuD7QEuvkT7j0zzAbW7hPb+H40D/8OJAg7/TPug74b/xorvA9k2PwNjZqL+sZK9ACX4rPi2AuEDuKo1A7q2kQBTtjsCVRe1Atsx5wFfdrUAvq64/icqUwEd+w8C8SppAJT6ZwCdJfMCpifZAEl/AwF/4qEAmNNPAuJ+JQC0qpMDuMK/AZQ6oPM5F/0DP49tAY2SxQOMt3cDsuqG/rHRNQd6VAEGh+LbA4rGcPykt40CiRFLAtuWWwDHpHED7gJ7Ax/6qwIb7mkCufNzAkfGTQDAmnMBYXJPAHL+pwIiH9sBJA+zANE9tQC9spUCwZbJA4fEqQOf6ycDKX4tA2m/YwDteLkHEKIXAJT+MwOt3DDyDELxAz3OLwG7LykBcc61Ai7nlQJAKn0ACt3nAYGazwJN9c7+iTrPAr93OQJLGmMBctsc9sFCoQJubgEBX+tDAhGumwGbf6UDYCpbAxwqVwNWU28CBAu9AFqKMQHU7prxSjrLAmoqewLUjPEBWRb1A3qEZwZR5lcDHB5M9DBZuQGjmhEDUU8ZAsErCwLxurkBRH+pAJyTeQC4ctb81sf6+oBCGQBKLp0Ak1HzAKyWZQD+xKkDYU7BA9mlUwMxpjEBMXclA893hP2ATyMB8eXnAicAtwKObu8DNYXpAqdabvrZGR0BSRqNAjF/aPJjfeT8TO9hAoaOTQFtij0BOwLLAr8arQCu7zEDlCIbAcmDAQA9SbEBVU5BAq0s1QaU1kD+UhZRSlEsASwFLAU0AAYeUTQABTQABSwGHlIloEClSlHSUUpSGlIaUgZQu"
    },
    "lr_schedule": {
        ":type:": "<class 'function'>",
        ":serialized:": "gAWVegIAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwNX2J1aWx0aW5fdHlwZZSTlIwKTGFtYmRhVHlwZZSFlFKUKGgCjAhDb2RlVHlwZZSFlFKUKEsBSwBLAEsBSwFLE0MEiABTAJROhZQpjAFflIWUjEpDOlxVc2Vyc1xMWkhcYW5hY29uZGEzXGxpYlxzaXRlLXBhY2thZ2VzXHN0YWJsZV9iYXNlbGluZXMzXGNvbW1vblx1dGlscy5weZSMBGZ1bmOUS4NDAgQBlIwDdmFslIWUKXSUUpR9lCiMC19fcGFja2FnZV9flIwYc3RhYmxlX2Jhc2VsaW5lczMuY29tbW9ulIwIX19uYW1lX1+UjB5zdGFibGVfYmFzZWxpbmVzMy5jb21tb24udXRpbHOUjAhfX2ZpbGVfX5RoDXVOTmgAjBBfbWFrZV9lbXB0eV9jZWxslJOUKVKUhZR0lFKUjBxjbG91ZHBpY2tsZS5jbG91ZHBpY2tsZV9mYXN0lIwSX2Z1bmN0aW9uX3NldHN0YXRllJOUaB99lH2UKGgXaA6MDF9fcXVhbG5hbWVfX5SMGWNvbnN0YW50X2ZuLjxsb2NhbHM+LmZ1bmOUjA9fX2Fubm90YXRpb25zX1+UfZSMDl9fa3dkZWZhdWx0c19flE6MDF9fZGVmYXVsdHNfX5ROjApfX21vZHVsZV9flGgYjAdfX2RvY19flE6MC19fY2xvc3VyZV9flGgAjApfbWFrZV9jZWxslJOURz8jXUfFVsOVhZRSlIWUjBdfY2xvdWRwaWNrbGVfc3VibW9kdWxlc5RdlIwLX19nbG9iYWxzX1+UfZR1hpSGUjAu"
    }
}